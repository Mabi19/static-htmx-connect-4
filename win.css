#board {
  position: relative;
}

#board::after {
  box-sizing: border-box;
  --x: 0;
  --y: 0;
  --length-scale: 1;
  --rotation: 0deg;
  display: block;
  border: 2px solid black;
  border-radius: calc(var(--token-size) / 2);
  width: calc(var(--length-scale) * 4 * var(--token-size));
  height: var(--token-size);
  position: absolute;
  left: calc(var(--token-size) * var(--x));
  top: calc(var(--token-size) * var(--y));
  transform: rotate(var(--rotation));
  transform-origin: calc(var(--token-size) / 2);
}

/* #region Vertical victories */
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1))::after {
  content: "";
  --x: 0;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1))::after {
  content: "";
  --x: 0;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1))::after {
  content: "";
  --x: 0;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1))::after {
  content: "";
  --x: 0;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col1))::after {
  content: "";
  --x: 0;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col1)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(6 of .col1))::after {
  content: "";
  --x: 0;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(6 of .col1)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(6 of .col1)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2))::after {
  content: "";
  --x: 1;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2))::after {
  content: "";
  --x: 1;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2))::after {
  content: "";
  --x: 1;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2))::after {
  content: "";
  --x: 1;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col2))::after {
  content: "";
  --x: 1;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col2)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(6 of .col2))::after {
  content: "";
  --x: 1;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(6 of .col2)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(6 of .col2)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3))::after {
  content: "";
  --x: 2;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3))::after {
  content: "";
  --x: 2;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3))::after {
  content: "";
  --x: 2;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3))::after {
  content: "";
  --x: 2;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col3))::after {
  content: "";
  --x: 2;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col3)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(6 of .col3))::after {
  content: "";
  --x: 2;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(6 of .col3)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(6 of .col3)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4))::after {
  content: "";
  --x: 3;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4))::after {
  content: "";
  --x: 3;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4))::after {
  content: "";
  --x: 3;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4))::after {
  content: "";
  --x: 3;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col4))::after {
  content: "";
  --x: 3;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(6 of .col4))::after {
  content: "";
  --x: 3;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(6 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(6 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5))::after {
  content: "";
  --x: 4;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5))::after {
  content: "";
  --x: 4;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5))::after {
  content: "";
  --x: 4;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5))::after {
  content: "";
  --x: 4;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col5))::after {
  content: "";
  --x: 4;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(6 of .col5))::after {
  content: "";
  --x: 4;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(6 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(6 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6))::after {
  content: "";
  --x: 5;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6))::after {
  content: "";
  --x: 5;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6))::after {
  content: "";
  --x: 5;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6))::after {
  content: "";
  --x: 5;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col6))::after {
  content: "";
  --x: 5;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(6 of .col6))::after {
  content: "";
  --x: 5;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(6 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(6 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col7)):has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7))::after {
  content: "";
  --x: 6;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col7)):has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col7)):has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col7)):has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7))::after {
  content: "";
  --x: 6;
  --y: 0;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col7)):has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col7)):has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7))::after {
  content: "";
  --x: 6;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col7)):has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7))::after {
  content: "";
  --x: 6;
  --y: 1;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col7)):has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7)):has(.token:nth-child(odd):nth-child(6 of .col7))::after {
  content: "";
  --x: 6;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7)):has(.token:nth-child(odd):nth-child(6 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col7)):has(.token:nth-child(odd):nth-child(4 of .col7)):has(.token:nth-child(odd):nth-child(5 of .col7)):has(.token:nth-child(odd):nth-child(6 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7)):has(.token:nth-child(even):nth-child(6 of .col7))::after {
  content: "";
  --x: 6;
  --y: 2;
  --rotation: 90deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7)):has(.token:nth-child(even):nth-child(6 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col7)):has(.token:nth-child(even):nth-child(4 of .col7)):has(.token:nth-child(even):nth-child(5 of .col7)):has(.token:nth-child(even):nth-child(6 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

/* #endregion */
/* #region Horizontal victories */
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4))::after {
  content: "";
  --x: 0;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col1)):has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4))::after {
  content: "";
  --x: 0;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col1)):has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5))::after {
  content: "";
  --x: 1;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col2)):has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5))::after {
  content: "";
  --x: 1;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col2)):has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6))::after {
  content: "";
  --x: 2;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col3)):has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6))::after {
  content: "";
  --x: 2;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col3)):has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(1 of .col7))::after {
  content: "";
  --x: 3;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(1 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(1 of .col4)):has(.token:nth-child(odd):nth-child(1 of .col5)):has(.token:nth-child(odd):nth-child(1 of .col6)):has(.token:nth-child(odd):nth-child(1 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(1 of .col7))::after {
  content: "";
  --x: 3;
  --y: 0;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(1 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(1 of .col4)):has(.token:nth-child(even):nth-child(1 of .col5)):has(.token:nth-child(even):nth-child(1 of .col6)):has(.token:nth-child(even):nth-child(1 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4))::after {
  content: "";
  --x: 0;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col1)):has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4))::after {
  content: "";
  --x: 0;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col1)):has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5))::after {
  content: "";
  --x: 1;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col2)):has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5))::after {
  content: "";
  --x: 1;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col2)):has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6))::after {
  content: "";
  --x: 2;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col3)):has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6))::after {
  content: "";
  --x: 2;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col3)):has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col7))::after {
  content: "";
  --x: 3;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(2 of .col4)):has(.token:nth-child(odd):nth-child(2 of .col5)):has(.token:nth-child(odd):nth-child(2 of .col6)):has(.token:nth-child(odd):nth-child(2 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(2 of .col7))::after {
  content: "";
  --x: 3;
  --y: 1;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(2 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(2 of .col4)):has(.token:nth-child(even):nth-child(2 of .col5)):has(.token:nth-child(even):nth-child(2 of .col6)):has(.token:nth-child(even):nth-child(2 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4))::after {
  content: "";
  --x: 0;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col1)):has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4))::after {
  content: "";
  --x: 0;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col1)):has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5))::after {
  content: "";
  --x: 1;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col2)):has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5))::after {
  content: "";
  --x: 1;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col2)):has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6))::after {
  content: "";
  --x: 2;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col3)):has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6))::after {
  content: "";
  --x: 2;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col3)):has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col7))::after {
  content: "";
  --x: 3;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(3 of .col4)):has(.token:nth-child(odd):nth-child(3 of .col5)):has(.token:nth-child(odd):nth-child(3 of .col6)):has(.token:nth-child(odd):nth-child(3 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(3 of .col7))::after {
  content: "";
  --x: 3;
  --y: 2;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(3 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(3 of .col4)):has(.token:nth-child(even):nth-child(3 of .col5)):has(.token:nth-child(even):nth-child(3 of .col6)):has(.token:nth-child(even):nth-child(3 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4))::after {
  content: "";
  --x: 0;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col1)):has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4))::after {
  content: "";
  --x: 0;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(4 of .col1)):has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5))::after {
  content: "";
  --x: 1;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col2)):has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5))::after {
  content: "";
  --x: 1;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(4 of .col2)):has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6))::after {
  content: "";
  --x: 2;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col3)):has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6))::after {
  content: "";
  --x: 2;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(4 of .col3)):has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col7))::after {
  content: "";
  --x: 3;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(4 of .col4)):has(.token:nth-child(odd):nth-child(4 of .col5)):has(.token:nth-child(odd):nth-child(4 of .col6)):has(.token:nth-child(odd):nth-child(4 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(4 of .col7))::after {
  content: "";
  --x: 3;
  --y: 3;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(4 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(4 of .col4)):has(.token:nth-child(even):nth-child(4 of .col5)):has(.token:nth-child(even):nth-child(4 of .col6)):has(.token:nth-child(even):nth-child(4 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4))::after {
  content: "";
  --x: 0;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col1)):has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4))::after {
  content: "";
  --x: 0;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(5 of .col1)):has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5))::after {
  content: "";
  --x: 1;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col2)):has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5))::after {
  content: "";
  --x: 1;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(5 of .col2)):has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6))::after {
  content: "";
  --x: 2;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col3)):has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6))::after {
  content: "";
  --x: 2;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(5 of .col3)):has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col7))::after {
  content: "";
  --x: 3;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(5 of .col4)):has(.token:nth-child(odd):nth-child(5 of .col5)):has(.token:nth-child(odd):nth-child(5 of .col6)):has(.token:nth-child(odd):nth-child(5 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(5 of .col7))::after {
  content: "";
  --x: 3;
  --y: 4;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(5 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(5 of .col4)):has(.token:nth-child(even):nth-child(5 of .col5)):has(.token:nth-child(even):nth-child(5 of .col6)):has(.token:nth-child(even):nth-child(5 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(6 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4))::after {
  content: "";
  --x: 0;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col1)):has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(6 of .col1)):has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4))::after {
  content: "";
  --x: 0;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(6 of .col1)):has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(6 of .col1)):has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5))::after {
  content: "";
  --x: 1;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col2)):has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5))::after {
  content: "";
  --x: 1;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(6 of .col2)):has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6))::after {
  content: "";
  --x: 2;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col3)):has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6))::after {
  content: "";
  --x: 2;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(6 of .col3)):has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6)) + #status::after {
  content: "Red wins! Refresh to reset";
}

#board:has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col7))::after {
  content: "";
  --x: 3;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(odd):nth-child(6 of .col4)):has(.token:nth-child(odd):nth-child(6 of .col5)):has(.token:nth-child(odd):nth-child(6 of .col6)):has(.token:nth-child(odd):nth-child(6 of .col7)) + #status::after {
  content: "Yellow wins! Refresh to reset";
}

#board:has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6)):has(.token:nth-child(even):nth-child(6 of .col7))::after {
  content: "";
  --x: 3;
  --y: 5;
  --rotation: 0deg;
  --length-scale: 1;
}
#board:has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6)):has(.token:nth-child(even):nth-child(6 of .col7)) .drop-region {
  pointer-events: none;
  cursor: not-allowed;
}
#board:has(.token:nth-child(even):nth-child(6 of .col4)):has(.token:nth-child(even):nth-child(6 of .col5)):has(.token:nth-child(even):nth-child(6 of .col6)):has(.token:nth-child(even):nth-child(6 of .col7)) + #status::after {
  content: "Red wins! Refresh to reset";
}

/* #endregion */
/* #region Ascending diagonal victories */
/* #endregion */
/* #region Descending diagonal victories */
/* #endregion */

/*# sourceMappingURL=win.css.map */
